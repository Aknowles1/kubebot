name: KubePolicy PR Scan

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  kubepolicy:
    runs-on: ubuntu-latest
    steps:
      # Safe pattern for forked PRs: checkout PR HEAD content, but run only trusted action code
      - name: Checkout PR HEAD
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      # Ensure local git has base ref under 'origin/<base>' so the action's diff works
      - name: Prepare base ref for diff
        run: |
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git
          git fetch --depth=1 origin ${{ github.event.pull_request.base.ref }}

      - name: KubePolicy PR Bot
        uses: Aknowles1/kubebot@v1.0.0
        env:
          KPB_NO_FALLBACK_ALL: 'true'
          # Explicit globs ensure consistent scanning under pull_request_target
          KPB_FILE_GLOBS: 'manifests/**/*.yaml,manifests/**/*.yml'
        with:
          severity_threshold: error
          include_glob: "**/*.yml,**/*.yaml"
          exclude_glob: "samples/**/*"
          post_pr_comment: true
          github_token: "${{ github.token }}"

      - name: Debug: can token comment?
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const body = 'KubePolicy debug: confirming token can post comments.';
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body,
              });
              core.info('Posted debug comment successfully');
            } catch (e) {
              core.warning('Failed to post debug comment: ' + e.message);
            }
