name: KubePolicy PR Scan

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  kubepolicy:
    runs-on: ubuntu-latest
    steps:
      # Same-repo PRs (runs from PR branch)
      - name: Checkout PR (same-repo)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Forked PRs (runs from base repo, safe pattern)
      - name: Checkout PR HEAD (fork-safe)
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      # Ensure local git has base ref under 'origin/<base>' so the action's diff works (fork-safe)
      - name: Prepare base ref for diff (fork-safe)
        if: github.event_name == 'pull_request_target'
        run: |
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git
          git fetch --depth=1 origin ${{ github.event.pull_request.base.ref }}

      # Same-repo: fetch base ref to satisfy origin/<base>...HEAD diff
      - name: Prepare base ref for diff (same-repo)
        if: github.event_name == 'pull_request'
        run: |
          git fetch --depth=1 origin ${{ github.base_ref }}

      - name: KubePolicy PR Bot
        uses: Aknowles1/kubebot@v1.0.0
        env:
          KPB_NO_FALLBACK_ALL: 'true'
          # Explicit globs ensure consistent scanning under pull_request_target
          KPB_FILE_GLOBS: 'manifests/**/*.yaml,manifests/**/*.yml'
        with:
          severity_threshold: error
          include_glob: "**/*.yml,**/*.yaml"
          exclude_glob: "samples/**/*"
          post_pr_comment: ${{ github.event_name == 'pull_request_target' || github.event.pull_request.head.repo.full_name == github.repository }}
          github_token: "${{ github.token }}"

      - name: Debug - can token comment?
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const body = 'KubePolicy debug: confirming token can post comments.';
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body,
              });
              core.info('Posted debug comment successfully');
            } catch (e) {
              core.warning('Failed to post debug comment: ' + e.message);
            }
